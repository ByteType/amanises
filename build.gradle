import org.springframework.boot.gradle.tasks.run.BootRun

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.bytetype'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_17
}

repositories {
	mavenCentral()
}

configurations {
	developImplementation.extendsFrom implementation
	developRuntimeOnly.extendsFrom runtimeOnly
}

sourceSets {
	develop {
		compileClasspath += main.output
		runtimeClasspath += main.output
	}
}

dependencies {
	// Spring boot
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// Json web token
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// Runtime database
	runtimeOnly 'org.postgresql:postgresql'

	// Develop database
	developRuntimeOnly 'com.h2database:h2'

	// Test database
	testRuntimeOnly 'com.h2database:h2'
}

configurations {
	developRuntimeOnly.exclude group: 'org.postgresql', module: 'postgresql'
	testRuntimeOnly.exclude group: 'org.postgresql', module: 'postgresql'
}

tasks.register('bootDevelopRun', BootRun) {
	mainClass = 'com.bytetype.amanises.Application'
	classpath = sourceSets.develop.runtimeClasspath
	group = 'application'
}

test {
	useJUnitPlatform()
}

jar {
	enabled = false
}